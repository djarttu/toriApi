openapi: 3.0.0
info:
  title: hugetoriapi
  version: '1.0'
  description: ''
servers:
  - url: 'https://hugetoriapi.herokuapp.com/'
paths:
  /registerUser:
    post:
      summary: ''
      operationId: post-registerUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                example-1:
                  value:
                    status: user created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      description: 'User can register '
  /login:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
              examples:
                '"X-Api-Key"':
                  value: ea9d16bd-d03c-4bd6-a794-0b30831a2d9f
        '401':
          description: Unauthorized
      operationId: get-login
      parameters: []
      security:
        - Http Basic Auth: []
      description: User can login using basic http authentication. Gets apikey in response.
  /addItem:
    post:
      summary: ''
      operationId: post-addItem
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      parameters:
        - schema:
            type: string
          in: header
          name: X-Api-Key
          required: true
        - schema:
            type: string
          in: header
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                desc:
                  type: string
                location:
                  type: string
                images:
                  type: string
                price:
                  type: string
                category:
                  type: string
                delivery:
                  type: object
                  required:
                    - shipping
                    - pickup
                  properties:
                    shipping:
                      type: boolean
                    pickup:
                      type: boolean
              required:
                - title
                - desc
                - location
                - images
                - price
                - category
                - delivery
            examples:
              example-1:
                value:
                  title: string
                  desc: string
                  location: string
                  images: string
                  price: string
                  category: string
                  delivery:
                    shipping: true
                    pickup: true
      security: []
      description: User can add items. Authorized by apikey
  /items:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  items:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          minLength: 1
                        desc:
                          type: string
                          minLength: 1
                        location:
                          type: string
                          minLength: 1
                        images:
                          type: string
                          minLength: 1
                        delivery:
                          type: string
                          minLength: 1
                        category:
                          type: string
                          minLength: 1
                        price:
                          type: string
                          minLength: 1
                        date:
                          type: string
                          minLength: 1
                      required:
                        - title
                        - desc
                        - location
                        - images
                        - delivery
                        - category
                        - price
                        - date
                required:
                  - items
      operationId: get-items
      security: []
      description: users can get all items without login
  /ownItems:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  items:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          minLength: 1
                        desc:
                          type: string
                          minLength: 1
                        location:
                          type: string
                          minLength: 1
                        images:
                          type: string
                          minLength: 1
                        delivery:
                          type: string
                          minLength: 1
                        category:
                          type: string
                          minLength: 1
                        price:
                          type: string
                          minLength: 1
                        ownerId:
                          type: string
                          minLength: 1
                        id:
                          type: string
                          minLength: 1
                        date:
                          type: string
                          minLength: 1
                      required:
                        - title
                        - desc
                        - location
                        - images
                        - delivery
                        - category
                        - price
                        - ownerId
                        - id
                        - date
                required:
                  - items
      operationId: get-ownItems
      parameters:
        - schema:
            type: string
          in: header
          name: X-Api-Key
      security: []
      description: User can get own items. Response includes item id for modify and delete items.  Authorized by apikey
  /modifyItem:
    put:
      summary: ''
      operationId: put-modifyItem
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: header
          name: X-Api-Key
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                id:
                  type: string
                  minLength: 1
                title:
                  type: string
                  minLength: 1
                desc:
                  type: string
                  minLength: 1
                location:
                  type: string
                  minLength: 1
                images:
                  type: string
                  minLength: 1
                price:
                  type: string
                  minLength: 1
                category:
                  type: string
                  minLength: 1
                delivery:
                  type: object
                  properties:
                    shipping:
                      type: boolean
                    pickup:
                      type: boolean
              required:
                - id
            examples:
              example-2:
                value:
                  id: string
                  title: string
                  desc: string
                  location: string
                  images: string
                  price: string
                  category: string
                  delivery:
                    shipping: true
                    pickup: true
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                id:
                  type: string
                  minLength: 1
                title:
                  type: string
                  minLength: 1
                desc:
                  type: string
                  minLength: 1
                location:
                  type: string
                  minLength: 1
                images:
                  type: string
                  minLength: 1
                price:
                  type: string
                  minLength: 1
                category:
                  type: string
                  minLength: 1
                delivery:
                  type: object
                  properties:
                    shipping:
                      type: boolean
                    pickup:
                      type: boolean
              required:
                - id
        description: ''
      security: []
      description: User can modify own items. Authorized by apikey.
  '/items/:id/':
    delete:
      summary: ''
      operationId: 'delete-items-:id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
              examples:
                example-1:
                  value:
                    status: item deleted
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      parameters:
        - schema:
            type: string
          in: query
          name: id
          required: true
        - schema:
            type: string
          in: header
          name: X-Api-Key
          required: true
      description: User can delete owned item passing items id in path parameter. Authorized by apikey.
      security: []
    parameters: []
  '/item/:keyword/':
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: 'get-item-:keyword'
      parameters:
        - schema:
            type: string
          in: query
          name: keyword
      description: User can filter items by passing location or category in requests path parameter.
    parameters: []
components:
  schemas: {}
  securitySchemes:
    Http Basic Auth:
      type: http
      scheme: basic
